name: Deploy clothcast-backend

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/clothcast_backend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/clothcast_backend:latest

      - name: Deploy on AWS EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/app

            # .env 파일 자동 생성 
            echo "AI_SERVER_URL=${{ secrets.AI_SERVER_URL }}" > .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "LOCAL_DB_HOST=${{ secrets.LOCAL_DB_HOST }}" >> .env
            echo "LOCAL_DB_NAME=${{ secrets.LOCAL_DB_NAME }}" >> .env
            echo "LOCAL_DB_USER=${{ secrets.LOCAL_DB_USER }}" >> .env
            echo "LOCAL_DB_PASSWORD=${{ secrets.LOCAL_DB_PASSWORD }}" >> .env
            echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> .env
            echo "RDS_DB_HOST=${{ secrets.RDS_DB_HOST }}" >> .env
            echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}" >> .env
            echo "RDS_DB_USER=${{ secrets.RDS_DB_USER }}" >> .env
            echo "RDS_DB_PASSWORD=${{ secrets.RDS_DB_PASSWORD }}" >> .env
            echo "SECURITY_USER_NAME=${{ secrets.SECURITY_USER_NAME }}" >> .env
            echo "SECURITY_USER_PASSWORD=${{ secrets.SECURITY_USER_PASSWORD }}" >> .env

            # 기존 컨테이너 중지 및 삭제 
            docker stop clothcast_backend || true
            docker rm clothcast_backend || true
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/clothcast_backend:latest || true

            # 최신 이미지 Pull 후 실행
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/clothcast_backend:latest
            docker run -d --name clothcast_backend -p 8080:8080 --env-file .env ${{ secrets.DOCKERHUB_USERNAME }}/clothcast_backend:latest